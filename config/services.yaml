imports:
    - { resource: repositories/services.yaml }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']


    # Custom services
    app.aws_logger:
        class: App\Services\Logger\AwsLoggerService

    App\Services\Shop\PurchaseUseCase:
        public: true
        arguments:
            - '@app.purchase_repositories'
            - '@app.aws_logger'
            - '@event_dispatcher'

    App\EventListener\ProductionQueueListener:
        arguments:
            - '@app.production_queue_repository'
        tags:
            - { name: kernel.event_listener, event: production.queue.registered, method: onRegister }
